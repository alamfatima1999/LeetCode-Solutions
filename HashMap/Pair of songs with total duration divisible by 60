class Solution
{
public:
    int numPairsDivisibleBy60(vector<int> &time)
    {
        map<int, int> mp;
        int n = time.size();
        int ans = 0;
        for (int i = 0; i < n; i++)
        {
            int rem = time[i] % 60;
            if (rem != 0)
            {
                rem = 60 - rem;
            }
            cout << rem << endl;
            auto it = mp.find(rem);
            if (it != mp.end())
            {
                cout << it->first << " " << it->second << endl;
                ans += it->second;
            }
            mp[time[i] % 60]++;
        }

        for (auto x : mp)
        {
            cout << x.first << " " << x.second << endl;
        }
        return ans;
    }
};